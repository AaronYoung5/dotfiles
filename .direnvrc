#!/usr/bin/env bash

layout_mamba() {
    local python_version=""
    local env_name=""

    # Parse arguments: optional --python <version> and optional environment name.
    while [[ "$#" -gt 0 ]]; do
        case "$1" in
            --python)
                shift
                python_version="$1"
                shift
                ;;
            *)
                if [[ -z "$env_name" ]]; then
                    env_name="$1"
                fi
                shift
                ;;
        esac
    done

    # If no environment name provided, try to read it from environment.yml.
    if [[ -z "$env_name" ]]; then
        if [[ -f environment.yml ]]; then
            env_name=$(grep "^name:" environment.yml | sed -e 's/name: //')
        else
            echo "No environment specified and environment.yml not found." >&2
            exit 1
        fi
    fi

    local env_dir="$PWD/.direnv"
    local env_path="$env_dir/mamba-$env_name"
    mkdir -p "$env_dir"

    if [[ ! -d "$env_path" ]]; then
        echo "Local environment '$env_name' not found; creating at $env_path..."
        if [[ -f environment.yml ]]; then
            if [[ -n "$python_version" ]]; then
                mamba create --yes --prefix "$env_path" python="$python_version"
                mamba env update --prefix "$env_path" --file environment.yml --prune
            else
                mamba env create --prefix "$env_path" --file environment.yml
            fi
        else
            if [[ -n "$python_version" ]]; then
                mamba create --yes --prefix "$env_path" python="$python_version"
            else
                echo "No environment.yml found and no --python version provided." >&2
                exit 1
            fi
        fi
    fi

    source activate "$env_path"
}
