#!/usr/bin/env zsh

# source a python virtual environment
se() {
	# Ternary operator replicator
	env_name=${1:-"env"}
	source "$env_name/bin/activate"
}

# source a conda environment
ce() {
  env_name=${1:-"env"}
  conda activate ./${env_name}
  export CONDA_DEFAULT_ENV=${env_name}
}

# Create a tmux session with a specific USER_HOME
tu() {
	[ -z $1 ] || [ -z $2 ] && echo "USAGE: $0 [ USER_HOME ] [ SESSION_NAME ]" && return
	[ ! -d $1 ] && echo "$1 is not a directory." && return
	USER_HOME=$1

	[ ! -z $2 ] && SESSION_NAME=$2

	USER_HOME=$USER_HOME tmux -S $USER_HOME/.tmux_socket new -A -s $SESSION_NAME
}

yadm() {
  # Only allow yadm if USER_HOME is not set
  if [ -n "${USER_HOME}" ]; then
    echo "USER_HOME is set. Please use 'yadmu' or exit the pseudo user."
    return 1
  fi
  command yadm "$@"
}

yadmu() {
	HOME=${USER_HOME} command yadm "$@"
}

# Create a pseudo user
create-pseudo-user() {
	[ -z $1 ] || [ -z $2 ] && echo "USAGE: $0 [ USER_HOME ] [ CLASS ]" && return
	USER_HOME=$1
	CLASS=$2

	mkdir -p ${USER_HOME}
	echo "Creating pseudo user at ${USER_HOME}"
	GIT_CONFIG=${USER_HOME}/.gitconfig yadmu clone git@github.com:AaronYoung5/dotfiles.git -b develop2 --no-bootstrap
	GIT_CONFIG=${USER_HOME}/.gitconfig yadmu config --add local.class ${CLASS}
	GIT_CONFIG=${USER_HOME}/.gitconfig yadmu config --add local.class pseudo
	GIT_CONFIG=${USER_HOME}/.gitconfig yadmu alt
	USER_HOME=${USER_HOME} yadmu bootstrap
}

update-pseudo-user() {
	yadmu() {
		HOME=${USER_HOME} yadm "$@"
	}

	# Only continue if it's a pseudo user (i.e. any of the classes == pseudo and USER_HOME is set)
	[ -z "${USER_HOME}" ] && echo "USER_HOME is not set." && return
	[ -z "$(yadmu config --includes --get-all local.class | grep pseudo)" ] && echo "This is not a pseudo user." && return
	# Only continue if there are no changes
	[ ! -z "$(yadmu status --porcelain)" ] && echo "There are changes in the pseudo user. Please commit or stash them." && return
# 
	echo "Updating pseudo user at ${USER_HOME}"
	yadmu reset --hard
}